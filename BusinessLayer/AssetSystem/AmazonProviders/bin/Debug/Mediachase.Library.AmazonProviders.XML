<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.Library.AmazonProviders</name>
    </assembly>
    <members>
        <member name="M:Mediachase.Library.AmazonProviders.S3DownloadProfile.#ctor(Mediachase.Ibn.Blob.BlobProfileDownload.Configuration.BlobProfileDownloadElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Library.AmazonProviders.S3DownloadProfile"/> class.
            </summary>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3DownloadProfile.GetProfileTicket(Mediachase.Ibn.Blob.BlobInfo)">
            <summary>
            Gets the profile ticket.
            </summary>
            <param name="blobInfo">The BLOB info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3DownloadProfile.InitializeByTicket(System.String)">
            <summary>
            Initializes the by ticket.
            </summary>
            <param name="ticket">The ticket.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3DownloadProfile.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the request.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3DownloadProfile.ProcessRequest(System.Web.HttpContext,Mediachase.Ibn.Blob.BlobInfo)">
            <summary>
            Processes the request.
            </summary>
            <param name="context">The context.</param>
            <param name="blobInfo">The BLOB info.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.CreateStream(Mediachase.Ibn.Blob.BlobInfo)">
            <summary>
            Creates the stream.
            </summary>
            <param name="blobInfo">The BLOB info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.GetInfo(System.Guid)">
            <summary>
            Gets the info.
            </summary>
            <param name="uidStream">The uid stream.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.ReadStream(Mediachase.Ibn.Blob.BlobInfo)">
            <summary>
            Reads the stream.
            </summary>
            <param name="blobInfo">The BLOB info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.ReleaseStream(System.Guid)">
            <summary>
            Releases the stream.
            </summary>
            <param name="uidStream">The uid stream.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.Search(System.String)">
            <summary>
            Searches the specified keyword.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.StreamCommited(Mediachase.Ibn.Blob.BlobInfo,Mediachase.Ibn.Blob.BlobInfo)">
            <summary>
            Streams the commited.
            </summary>
            <param name="newBlobInfo">The new BLOB info.</param>
            <param name="oldBlobInfo">The old BLOB info.</param>
        </member>
        <member name="M:Mediachase.Library.AmazonProviders.S3StorageProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.UseSSL">
            <summary>
            Sets a value indicating whether [use SSL].
            </summary>
            <value><c>true</c> if [use SSL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.UseSubDomains">
            <summary>
            Sets a value indicating whether [use sub domains].
            </summary>
            <value><c>true</c> if [use sub domains]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.AccessKeyID">
            <summary>
            Gets or sets the access key ID.
            </summary>
            <value>The access key ID.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>The host.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.ExpirationTimeSpan">
            <summary>
            Gets or sets the expiration time span.
            </summary>
            <value>The expiration time span.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.SecretAccessKey">
            <summary>
            Gets or sets the secret access key.
            </summary>
            <value>The secret access key.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.BucketName">
            <summary>
            Gets or sets the name of the bucket.
            </summary>
            <value>The name of the bucket.</value>
        </member>
        <member name="P:Mediachase.Library.AmazonProviders.S3StorageProvider.Service">
            <summary>
            Gets the service.
            </summary>
            <value>The service.</value>
        </member>
    </members>
</doc>
