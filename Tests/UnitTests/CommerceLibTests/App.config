<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<configSections>
		<sectionGroup name="FrameworkProviders">
			<section name="dataService" type="Mediachase.Data.Provider.DataProviderSection, Mediachase.DataProvider" />
			<section name="imageService" type="Mediachase.Commerce.Engine.Images.ImageServiceSection, Mediachase.Commerce" />
			<section name="templateService" type="Mediachase.Commerce.Engine.Template.TemplateProviderSection, Mediachase.Commerce" />
		</sectionGroup>
		<sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<section name="MetaDataTest.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
		</sectionGroup>
		<sectionGroup name="CommerceFramework">
			<section name="Workflow" type="Mediachase.Commerce.WorkflowConfiguration,Mediachase.Commerce" />
			<section name="Application" type="Mediachase.Commerce.Core.CoreConfiguration,Mediachase.Commerce" />
			<section name="Catalog" type="Mediachase.Commerce.Catalog.CatalogConfiguration,Mediachase.Commerce" />
			<section name="Marketing" type="Mediachase.Commerce.Marketing.MarketingConfiguration,Mediachase.Commerce" />
			<section name="Orders" type="Mediachase.Commerce.Orders.OrderConfiguration,Mediachase.Commerce" />
			<section name="Profile" type="Mediachase.Commerce.Profile.ProfileConfiguration,Mediachase.Commerce" />
			<section name="Mediachase.Search" type="Mediachase.Search.SearchConfiguration,Mediachase.Search" />
			<section name="ContentManagement" type="Mediachase.Cms.CmsConfiguration,Mediachase.Cms"/>
		</sectionGroup>
		<sectionGroup name="mediachase.ibn.library">
			<section name="folderElementLocations" type="Mediachase.Ibn.Library.Configuration.FileLibraryLocationSection, Mediachase.AssetLibrary" />
			<section name="folderElementExtension" type="Mediachase.Ibn.Library.Configuration.FolderElementExtensionSection, Mediachase.AssetLibrary" />
			<section name="downloadFilters" type="Mediachase.Ibn.Library.Configuration.DownloadFilterSection, Mediachase.AssetLibrary" />
		</sectionGroup>
		<sectionGroup name="mediachase.ibn.data" type="Mediachase.Ibn.Data.Configuration.MediachaseDataSectionGroup, Mediachase.Ibn.Data">
			<section name="metaClassManager" type="Mediachase.Ibn.Data.Meta.Management.Configuration.MetaClassManagerSection, Mediachase.Ibn.Data" />
			<section name="metaObject" type="Mediachase.Ibn.Data.Meta.Configuration.MetaObjectSection, Mediachase.Ibn.Data" />
			<section name="businessObject" type="Mediachase.Ibn.Data.Meta.Configuration.BusinessObjectSection, Mediachase.Ibn.Data" />
		</sectionGroup>
		<sectionGroup name="mediachase.ibn.blob" type="Mediachase.Ibn.Blob.Configuration.BlobStorageGroup, Mediachase.Ibn.Blob">
			<section name="storageProvider" type="Mediachase.Ibn.Blob.Configuration.BlobStorageSection, Mediachase.Ibn.Blob" />
			<section name="profileCache" type="Mediachase.Ibn.Blob.BlobProfileDownload.Configuration.BlobCacheProfileSection, Mediachase.Ibn.Blob" />
			<section name="profileDownload" type="Mediachase.Ibn.Blob.BlobProfileDownload.Configuration.BlobProfileDownloadSection, Mediachase.Ibn.Blob" />
		</sectionGroup>
		<sectionGroup name="mediachase.fileUploader" type="Mediachase.FileUploader.Configuration.MediachaseFileUploaderSectionGroup, Mediachase.FileUploader">
			<section name="fileUploaderContext" type="Mediachase.FileUploader.Configuration.FileUploaderContextSection, Mediachase.FileUploader" />
			<section name="tempFileStorage" type="Mediachase.FileUploader.Web.Configuration.TempFileStorageSection, Mediachase.FileUploader" />
			<section name="uploadProgress" type="Mediachase.FileUploader.Web.Configuration.UploadProgressSection, Mediachase.FileUploader" />
			<section name="fileUploadControl" type="Mediachase.FileUploader.Web.Configuration.FileUploadControlSection, Mediachase.FileUploader" />
		</sectionGroup>
		<sectionGroup name="mediachase.license">
			<section name="licenseProvider" type="Mediachase.Licensing.LicenseStorageSection, Mediachase.Licensing" />
		</sectionGroup>
		<sectionGroup name="common">
			<section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
		</sectionGroup>
	</configSections>
	<mediachase.license>
		<licenseProvider defaultProvider="sqlProvider" allowUpload="True" licenseServerUri="http://licensing.mediachase.com/2.0/License.aspx">
			<providers>
				<add name="fileProvider" type="Mediachase.Licensing.FileStorageProvider, Mediachase.Licensing" storagePath="c:\Projects\ECF5\main\src\AdminLayer\ConsoleManager\bin" />
				<add name="sqlProvider" type="Mediachase.Licensing.SqlStorageProvider, Mediachase.Licensing" connectionStringName="EcfSqlConnection" tableName="" createTable="True" />
			</providers>
		</licenseProvider>
	</mediachase.license>

	<!-- Commons Logging -->
	<common>
		<logging configSource="log.config"></logging>
	</common>

	<!-- Asset Library Configuration -->
	<mediachase.ibn.data>
		<metaClassManager>
		</metaClassManager>
		<metaObject maxListObject="1000">
			<types>
			</types>
			<instances>
				<add metaClass="Folder" type="Mediachase.Ibn.Library.Folder, Mediachase.AssetLibrary" />
				<add metaClass="FolderElement" type="Mediachase.Ibn.Library.FolderElement, Mediachase.AssetLibrary" />
			</instances>
		</metaObject>
		<businessObject>
			<services>
				<add name="McTreeRelation" installer="Mediachase.Ibn.Data.Services.TreeServiceInstaller, Mediachase.Ibn.Data.Services" type="Mediachase.Ibn.Data.Services.TreeService, Mediachase.Ibn.Data.Services" />
				<add name="McChangeDetection" installer="Mediachase.Ibn.Data.Meta.ChangeDetectionServiceInstaller, Mediachase.Ibn.Data" type="Mediachase.Ibn.Data.Meta.ChangeDetectionService, Mediachase.Ibn.Data" activation="OnSave" userType="String" />
			</services>
			<builderHandlers>
			</builderHandlers>
		</businessObject>
	</mediachase.ibn.data>
	<!-- File library-->
	<mediachase.ibn.library>
		<downloadFilters>
			<add name="thumbnail" type="Mediachase.Ibn.Library.DownloadFilterThumbnail, Mediachase.AssetLibrary" />
		</downloadFilters>
		<folderElementLocations configSource="library.Folders.config" />
		<folderElementExtension>
			<add mimeType="image/jpeg" type="Mediachase.Ibn.Library.ImageFolderElementExtension, Mediachase.AssetLibrary" />
			<add mimeType="application/pdf" type="Mediachase.Ibn.Library.PdfFolderElementExtension, Mediachase.AssetLibrary" />
		</folderElementExtension>
	</mediachase.ibn.library>
	<mediachase.ibn.blob>
		<profileDownload configSource="library.Download.config" />
		<storageProvider configSource="library.Storage.config" />
		<profileCache>
			<!--
				<add name="uidCache" path="c:\Projects\IbnNextTfs\5.0\Server\TestUrl\cache" virtualPath="TestUrl/cache" storageProvider="DiskBlobStorageProvider"/>
				<add name="publicCache" path="c:\Projects\IbnNextTfs\5.0\Server\TestUrl\publicCache" virtualPath="TestUrl/publicCache/" storageProvider="PublicDiskBlobStorageProvider"/>
			-->
		</profileCache>
	</mediachase.ibn.blob>
	<!-- Framework configuration -->
	<CommerceFramework>
		<ContentManagement>
			<Connection connectionStringName="EcfSqlConnection"/>
			<Cache enabled="false" pageDocumentTimeout="0:0:10" menuTimeout="0:1:0" workflowTimeout="0:1:0" templateTimeout="0:1:0" sitesCollectionTimeout="0:0:20"/>
			<Roles>
				<add name="AdminRole" value="Cms Admins" />
				<add name="ManagerRole" value="Cms Managers" />
				<add name="EditorRole" value="Cms Editors" />
				<add name="ViewerRole" value="Cms Viewers" />
			</Roles>
		</ContentManagement>
		<!-- Search Configuration -->
		<Mediachase.Search configSource="mediachase.Search.config" />
		<!-- Workflow Configuration -->
		<Workflow>
			<Workflows>
				<add name="CartValidate" displayname="Validate Cart" description="Checks inventory, populates extra fields" type="Mediachase.Commerce.Workflow.CartValidateWorkflow, Mediachase.Commerce.Workflow" xomlpath="" rulespath="" />
				<add name="CartPrepare" displayname="Cart Prepare" description="Creates shipments" type="Mediachase.Commerce.Workflow.CartPrepareWorkflow, Mediachase.Commerce.Workflow" xomlpath="" rulespath="" />
				<add name="CartCheckout" displayname="Cart Checkout" description="Processes credit card information" type="Mediachase.Commerce.Workflow.CartCheckoutWorkflow, Mediachase.Commerce.Workflow" xomlpath="" rulespath="" />
			</Workflows>
		</Workflow>
		<!-- Catalog Configuration -->
		<Application defaultApplicationName="eCommerceFramework">
			<Connection connectionStringName="EcfSqlConnection" />
			<Cache enabled="false" appTimeout="10" />
			<Roles>
				<add name="AdminRole" value="Admins" />
				<add name="ManagerUserRole" value="Management Users" />
				<add name="EveryoneRole" value="Everyone" />
				<add name="RegisteredRole" value="Registered" />
			</Roles>
		</Application>
		<!-- Catalog Configuration -->
		<Catalog autoConfigure="true">
			<Connection connectionStringName="EcfSqlConnection" />
			<Cache enabled="true" collectionTimeout="10" entryTimeout="10" nodeTimeout="10" schemaTimeout="10" />
			<Encoding imageQualityPercentage="80" defaultFormat="jPeg" />
			<Roles>
				<add name="CatalogAdminRole" value="Catalog Admins" />
				<add name="CatalogManagerRole" value="Catalog Managers" />
				<add name="CatalogSchemaManagerRole" value="Catalog Schema Managers" />
				<add name="CatalogViewerRole" value="Catalog Viewers" />
			</Roles>
      <!-- Sale Price Types -->
      <SalePriceTypes>
        <add key="AllCustomers" value="0" description="All Customers" />
        <add key="Customer" value="1" description="Customer"/>
        <add key="CustomerPriceGroup" value="2" description="Customer Price Group"/>
        <!-- Add custom types here -->
        <!--<add key="JurisdictionGroup" value="3" description="Jurisdiction Group"/>-->
      </SalePriceTypes>
    </Catalog>
		<!-- Marketing Configuration -->
		<Marketing>
			<Connection connectionStringName="EcfSqlConnection" />
			<Cache enabled="true" promotionTimeout="10" campaignTimeout="10" policyTimeout="15" segmentTimeout="10" expressionTimeout="10" />
			<MappedTypes>
				<ExpressionValidatorType name="Mediachase.Commerce.Marketing.Validators.RulesExprValidator,Mediachase.Commerce.Marketing.Validators" />
			</MappedTypes>
			<Roles>
				<add name="AdminRole" value="Marketing Admins" />
				<add name="ManagerRole" value="Marketing Managers" />
				<add name="SchemaManagerRole" value="Marketing Schema Managers" />
				<add name="ViewerRole" value="Marketing Viewers" />
			</Roles>
		</Marketing>
		<!-- Profile Configuration -->
		<Profile autoConfigure="true">
			<MetaClasses>
				<CustomerAddressClass name="CustomerAddressEx" />
				<OrganizationClass name="Organization" />
				<AccountClass name="Account" />
			</MetaClasses>
			<MappedTypes>
				<CustomerAddress name="Mediachase.Commerce.Profile.CustomerAddress,Mediachase.Commerce" />
				<Organization name="Mediachase.Commerce.Profile.Organization,Mediachase.Commerce" />
				<Account name="Mediachase.Commerce.Profile.Account,Mediachase.Commerce" />
			</MappedTypes>
			<Roles>
				<add name="AdminRole" value="Profile Admins" />
				<add name="ManagerRole" value="Profile Managers" />
				<add name="SchemaManagerRole" value="Profile Schema Managers" />
				<add name="ViewerRole" value="Profile Viewers" />
			</Roles>
			<Connection connectionStringName="EcfSqlConnection" />
			<Cache enabled="true" userCollectionTimeout="0:1:0" organizationCollectionTimeout="0:1:0" userTimeout="0:1:0" organizationTimeout="0:1:0" />
		</Profile>
		<!-- Orders Configuration -->
		<Orders newOrderStatus="NewOrder" autoConfigure="true">
			<MappedTypes>
				<ShoppingCartType name="Mediachase.Commerce.Orders.Cart,Mediachase.Commerce" />
				<PurchaseOrderType name="Mediachase.Commerce.Orders.PurchaseOrder,Mediachase.Commerce" />
				<OrderFormType name="Mediachase.Commerce.Orders.OrderForm,Mediachase.Commerce" />
				<PaymentPlanType name="Mediachase.Commerce.Orders.PaymentPlan,Mediachase.Commerce" />
				<LineItemType name="Mediachase.Commerce.Orders.LineItem,Mediachase.Commerce" />
				<OrderGroupAddressType name="Mediachase.Commerce.Orders.OrderAddress,Mediachase.Commerce" />
				<ShipmentType name="Mediachase.Commerce.Orders.Shipment,Mediachase.Commerce" />
			</MappedTypes>
			<MetaClasses>
				<PurchaseOrderClass name="PurchaseOrder" />
				<PaymentPlanClass name="PaymentPlan" />
				<ShoppingCartClass name="ShoppingCart" />
				<OrderFormClass name="OrderFormEx" />
				<LineItemClass name="LineItemEx" />
				<ShipmentClass name="ShipmentEx" />
				<OrderAddressClass name="OrderGroupAddressEx" />
			</MetaClasses>
			<Connections confConnectionStringName="EcfSqlConnection" transConnectionStringName="EcfSqlConnection" />
			<Cache enabled="true" shippingCollectionTimeout="10" paymentCollectionTimeout="10" statusCollectionTimeout="10" countryCollectionTimeout="10" />
			<Roles>
				<add name="AdminRole" value="Order Admins" />
				<add name="ManagerRole" value="Order Managers" />
				<add name="SchemaManagerRole" value="Order Schema Managers" />
				<add name="ViewerRole" value="Order Viewers" />
			</Roles>
		</Orders>
	</CommerceFramework>
	<!-- 
		Framework Data provides.
		Currenty supports following providers:
		 - imageService: processes the images and creates a cached version, default implementation is caching images in the file system
		 - dataService: provides provider based access to the database, default implementation uses SqlDataProvider
	-->
	<FrameworkProviders>
		<dataService defaultProvider="SqlDataProvider">
			<providers>
				<add name="SqlDataProvider" type="Mediachase.Data.Provider.SqlDataProvider, Mediachase.SqlDataProvider" connectionStringName="EcfSqlConnection" applicationName="eCommerceFramework" />
			</providers>
		</dataService>
		<imageService defaultProvider="HandlerImageProvider">
			<providers>
				<add name="HandlerImageProvider" type="Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider, Mediachase.Commerce" urlFormatString="~/images/t/{0}.image.ashx" applicationName="eCommerceFramework"/>
			</providers>
		</imageService>
		<templateService defaultProvider="XslTemplateProvider">
			<providers>
				<add name="XslTemplateProvider" type="Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider, Mediachase.Commerce" applicationName="eCommerceFramework" templateSource="c:\Projects\ECF5\main\src\PublicLayer\Templates\{0}\{1}.xsl" />
			</providers>
		</templateService>
	</FrameworkProviders>
	<appSettings>
		<add key="MetaDataConnection" value="MetaDataConnection" />
		<add key="ClientSettingsProvider.ServiceUri" value="" />
		<add key="commercemanager-url" value="http://ecf50.demo.mediachase.com/admin" />
	</appSettings>
	<connectionStrings configSource="connectionStrings.config" />
	<system.net>
		<mailSettings>
			<smtp>
				<network host="localhost" />
			</smtp>
		</mailSettings>
	</system.net>
	<system.web>
		<membership defaultProvider="ClientAuthenticationMembershipProvider">
			<providers>
				<add connectionStringName="MembershipSqlConnection" applicationName="eCommerceFramework" enablePasswordRetrieval="true" enablePasswordReset="false" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" passwordFormat="Clear" passwordStrengthRegularExpression="" minRequiredPasswordLength="4" minRequiredNonalphanumericCharacters="0" name="CMSMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
				<add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
			</providers>
		</membership>
		<roleManager defaultProvider="ClientRoleProvider" enabled="true">
			<providers>
				<add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
			</providers>
		</roleManager>
	</system.web>
</configuration>