// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using Mediachase.Commerce.Profile;
namespace UnitTests
{
    /// <summary>
    ///This is a test class for Mediachase.Commerce.Profile.ProfileConfiguration and is intended
    ///to contain all Mediachase.Commerce.Profile.ProfileConfiguration Unit Tests
    ///</summary>
    [TestClass()]
    public class ProfileConfigurationTest
    {


        private TestContext testContextInstance;

        /// <summary>
        /// Gets or sets the test context which provides
        /// information about and functionality for the current test run.
        /// </summary>
        /// <value>The test context.</value>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        /// A test for AutoConfigure
        /// </summary>
        [TestMethod()]
        public void ProfileConfiguration_UnitTest_AutoConfigure()
        {
            ProfileConfiguration target = ProfileConfiguration.Instance; ;
            Assert.AreNotEqual(false, target.AutoConfigure, "Mediachase.Commerce.Profile.ProfileConfiguration.AutoConfigure was not set correc" +
                    "tly.");
            Assert.AreEqual(true, target.AutoConfigure, "Mediachase.Commerce.Profile.ProfileConfiguration.AutoConfigure was not set correc" +
                    "tly.");
        }

        /// <summary>
        /// A test for Connection
        /// </summary>
        [TestMethod()]
        public void ProfileConfiguration_UnitTest_Connection()
        {
            ProfileConfiguration target = ProfileConfiguration.Instance; 
            string val = "EcfSqlConnection"; // TODO: Assign to an appropriate value for the property
            Assert.AreEqual(val, target.Connection.ConnectionStringName, "Mediachase.Commerce.Profile.ProfileConfiguration.Connection was not set correctly" +
                    ".");
        }

        /// <summary>
        /// A test for Instance
        /// </summary>
        [TestMethod()]
        public void ProfileConfiguration_UnitTest_Instance()
        {
            //Just try to access the instance to see if there is an error
            ProfileConfiguration val = ProfileConfiguration.Instance; // TODO: Assign to an appropriate value for the property
        }

        /// <summary>
        /// A test for MappedTypes
        /// </summary>
        [TestMethod()]
        public void ProfileConfiguration_UnitTest_MappedTypes()
        {
            ProfileConfiguration target = ProfileConfiguration.Instance;
            string val = "Mediachase.Commerce.Profile.CustomerAddress,Mediachase.Commerce";
            Assert.AreEqual(val, target.MappedTypes.CustomerAddress.Name, 
                            "Mediachase.Commerce.Profile.ProfileConfiguration.MappedTypes was not set correctly.");
        }

        /// <summary>
        /// A test for MetaClasses
        /// </summary>
        [TestMethod()]
        public void ProfileConfiguration_UnitTest_MetaClasses()
        {
            ProfileConfiguration target = ProfileConfiguration.Instance;
            string val = "CustomerAddressEx";
            Assert.AreEqual(val, target.MetaClasses.CustomerAddressClass.Name, "Mediachase.Commerce.Profile.ProfileConfiguration.MetaClasses was not set correctl" +
                    "y.");
        }
    }


}
